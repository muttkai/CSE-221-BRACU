# -*- coding: utf-8 -*-
"""task5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dgGi8LUsRrL8ntrudVK26VbOmwe8mi4A
"""

inp_file= open ('input5_2.txt',"r")
out_file= open( 'output5_2.txt',"w")
vartice1,vartice2,temp= inp_file.readline(). strip().split(" ")
list_1= [0]* ( int(vartice1) +1)

visit= [] 
queue= []
em_dict= {}
temp= int(temp)
#------------------------------
for a in range (int(vartice2)) :
  j=[int(x) for x in inp_file.readline().strip().split(' ')]
  
  if list_1[j [0]]!=0 : 
    list_1[j [0]].append(j [1])  
  
  else :
    list_1[j [0]]=[j[1]]
    
  if list_1[j [1]] !=0 :
    list_1[j [1]].append(j[0])
    
  else :
    list_1[j [1]]= [j [0]]
for b in range(int(vartice1)+1) :
  em_dict[b]= list_1[b]
#------------------------------
def bfs(visit, graph,temp, node) : 
  
  flag= [0]* (int(vartice1) +1)    
  time= [0]* (int(vartice1) +1)
  
  visit. append(node)
  queue. append(node)
  while len(queue)!= 0 :          
    store = queue.pop(0) 
    for c in list_1[store] :
      
      if c not in visit :
        time[c]= time[store]+1
        flag[c]= store
        
        visit.append(c)
        queue.append(c)
#------------------------------        
  out_file.write(f"Time:{time[temp]} \n") 
  save= str(temp)
  for inp_file in range (time [temp]) :
    save= str(flag[temp])+" "+save
    temp= flag[temp]
  
  out_file.write(f"shortest path:{save}")
 
#----------------
bfs(visit,em_dict,temp,1)
inp_file.close()
out_file.close()